
get_min_max:     file format elf64-x86-64


Disassembly of section .init:

0000000000400510 <_init>:
  400510:	48 83 ec 08          	sub    $0x8,%rsp
  400514:	48 8b 05 dd 0a 20 00 	mov    0x200add(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  40051b:	48 85 c0             	test   %rax,%rax
  40051e:	74 05                	je     400525 <_init+0x15>
  400520:	e8 3b 00 00 00       	callq  400560 <__gmon_start__@plt>
  400525:	48 83 c4 08          	add    $0x8,%rsp
  400529:	c3                   	retq   

Disassembly of section .plt:

0000000000400530 <__stack_chk_fail@plt-0x10>:
  400530:	ff 35 d2 0a 20 00    	pushq  0x200ad2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400536:	ff 25 d4 0a 20 00    	jmpq   *0x200ad4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40053c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400540 <__stack_chk_fail@plt>:
  400540:	ff 25 d2 0a 20 00    	jmpq   *0x200ad2(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400546:	68 00 00 00 00       	pushq  $0x0
  40054b:	e9 e0 ff ff ff       	jmpq   400530 <_init+0x20>

0000000000400550 <__libc_start_main@plt>:
  400550:	ff 25 ca 0a 20 00    	jmpq   *0x200aca(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400556:	68 01 00 00 00       	pushq  $0x1
  40055b:	e9 d0 ff ff ff       	jmpq   400530 <_init+0x20>

0000000000400560 <__gmon_start__@plt>:
  400560:	ff 25 c2 0a 20 00    	jmpq   *0x200ac2(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400566:	68 02 00 00 00       	pushq  $0x2
  40056b:	e9 c0 ff ff ff       	jmpq   400530 <_init+0x20>

0000000000400570 <malloc@plt>:
  400570:	ff 25 ba 0a 20 00    	jmpq   *0x200aba(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400576:	68 03 00 00 00       	pushq  $0x3
  40057b:	e9 b0 ff ff ff       	jmpq   400530 <_init+0x20>

0000000000400580 <__printf_chk@plt>:
  400580:	ff 25 b2 0a 20 00    	jmpq   *0x200ab2(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400586:	68 04 00 00 00       	pushq  $0x4
  40058b:	e9 a0 ff ff ff       	jmpq   400530 <_init+0x20>

0000000000400590 <__isoc99_scanf@plt>:
  400590:	ff 25 aa 0a 20 00    	jmpq   *0x200aaa(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400596:	68 05 00 00 00       	pushq  $0x5
  40059b:	e9 90 ff ff ff       	jmpq   400530 <_init+0x20>

Disassembly of section .text:

00000000004005a0 <_start>:
  4005a0:	31 ed                	xor    %ebp,%ebp
  4005a2:	49 89 d1             	mov    %rdx,%r9
  4005a5:	5e                   	pop    %rsi
  4005a6:	48 89 e2             	mov    %rsp,%rdx
  4005a9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4005ad:	50                   	push   %rax
  4005ae:	54                   	push   %rsp
  4005af:	49 c7 c0 00 08 40 00 	mov    $0x400800,%r8
  4005b6:	48 c7 c1 90 07 40 00 	mov    $0x400790,%rcx
  4005bd:	48 c7 c7 96 06 40 00 	mov    $0x400696,%rdi
  4005c4:	e8 87 ff ff ff       	callq  400550 <__libc_start_main@plt>
  4005c9:	f4                   	hlt    
  4005ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  4005d0:	b8 5f 10 60 00       	mov    $0x60105f,%eax
  4005d5:	55                   	push   %rbp
  4005d6:	48 2d 58 10 60 00    	sub    $0x601058,%rax
  4005dc:	48 89 e5             	mov    %rsp,%rbp
  4005df:	48 83 f8 0e          	cmp    $0xe,%rax
  4005e3:	76 1b                	jbe    400600 <_start+0x60>
  4005e5:	b8 00 00 00 00       	mov    $0x0,%eax
  4005ea:	48 85 c0             	test   %rax,%rax
  4005ed:	74 11                	je     400600 <_start+0x60>
  4005ef:	bf 58 10 60 00       	mov    $0x601058,%edi
  4005f4:	5d                   	pop    %rbp
  4005f5:	ff e0                	jmpq   *%rax
  4005f7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  4005fe:	00 00 
  400600:	5d                   	pop    %rbp
  400601:	c3                   	retq   
  400602:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nopw %cs:0x0(%rax,%rax,1)
  400609:	1f 84 00 00 00 00 00 
  400610:	be 58 10 60 00       	mov    $0x601058,%esi
  400615:	55                   	push   %rbp
  400616:	48 81 ee 58 10 60 00 	sub    $0x601058,%rsi
  40061d:	48 89 e5             	mov    %rsp,%rbp
  400620:	48 c1 fe 03          	sar    $0x3,%rsi
  400624:	48 89 f0             	mov    %rsi,%rax
  400627:	48 c1 e8 3f          	shr    $0x3f,%rax
  40062b:	48 01 c6             	add    %rax,%rsi
  40062e:	48 d1 fe             	sar    %rsi
  400631:	74 15                	je     400648 <_start+0xa8>
  400633:	b8 00 00 00 00       	mov    $0x0,%eax
  400638:	48 85 c0             	test   %rax,%rax
  40063b:	74 0b                	je     400648 <_start+0xa8>
  40063d:	bf 58 10 60 00       	mov    $0x601058,%edi
  400642:	5d                   	pop    %rbp
  400643:	ff e0                	jmpq   *%rax
  400645:	0f 1f 00             	nopl   (%rax)
  400648:	5d                   	pop    %rbp
  400649:	c3                   	retq   
  40064a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400650:	80 3d 01 0a 20 00 00 	cmpb   $0x0,0x200a01(%rip)        # 601058 <__TMC_END__>
  400657:	75 11                	jne    40066a <_start+0xca>
  400659:	55                   	push   %rbp
  40065a:	48 89 e5             	mov    %rsp,%rbp
  40065d:	e8 6e ff ff ff       	callq  4005d0 <_start+0x30>
  400662:	5d                   	pop    %rbp
  400663:	c6 05 ee 09 20 00 01 	movb   $0x1,0x2009ee(%rip)        # 601058 <__TMC_END__>
  40066a:	c3                   	retq   
  40066b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400670:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  400675:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400679:	75 05                	jne    400680 <_start+0xe0>
  40067b:	eb 93                	jmp    400610 <_start+0x70>
  40067d:	0f 1f 00             	nopl   (%rax)
  400680:	b8 00 00 00 00       	mov    $0x0,%eax
  400685:	48 85 c0             	test   %rax,%rax
  400688:	74 f1                	je     40067b <_start+0xdb>
  40068a:	55                   	push   %rbp
  40068b:	48 89 e5             	mov    %rsp,%rbp
  40068e:	ff d0                	callq  *%rax
  400690:	5d                   	pop    %rbp
  400691:	e9 7a ff ff ff       	jmpq   400610 <_start+0x70>

0000000000400696 <main>:
  400696:	55                   	push   %rbp
  400697:	53                   	push   %rbx
  400698:	48 83 ec 28          	sub    $0x28,%rsp
  40069c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
  4006a3:	00 00 
  4006a5:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
  4006aa:	31 c0                	xor    %eax,%eax
  4006ac:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
  4006b3:	00 
  4006b4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
  4006bb:	00 
  4006bc:	be 18 08 40 00       	mov    $0x400818,%esi
  4006c1:	bf 01 00 00 00       	mov    $0x1,%edi
  4006c6:	e8 b5 fe ff ff       	callq  400580 <__printf_chk@plt>
  4006cb:	48 8d 74 24 14       	lea    0x14(%rsp),%rsi
  4006d0:	bf 38 08 40 00       	mov    $0x400838,%edi
  4006d5:	b8 00 00 00 00       	mov    $0x0,%eax
  4006da:	e8 b1 fe ff ff       	callq  400590 <__isoc99_scanf@plt>
  4006df:	48 63 7c 24 14       	movslq 0x14(%rsp),%rdi
  4006e4:	48 c1 e7 02          	shl    $0x2,%rdi
  4006e8:	e8 83 fe ff ff       	callq  400570 <malloc@plt>
  4006ed:	48 89 c5             	mov    %rax,%rbp
  4006f0:	be 3b 08 40 00       	mov    $0x40083b,%esi
  4006f5:	bf 01 00 00 00       	mov    $0x1,%edi
  4006fa:	b8 00 00 00 00       	mov    $0x0,%eax
  4006ff:	e8 7c fe ff ff       	callq  400580 <__printf_chk@plt>
  400704:	8b 74 24 14          	mov    0x14(%rsp),%esi
  400708:	85 f6                	test   %esi,%esi
  40070a:	7e 27                	jle    400733 <main+0x9d>
  40070c:	bb 00 00 00 00       	mov    $0x0,%ebx
  400711:	48 63 d3             	movslq %ebx,%rdx
  400714:	48 8d 74 95 00       	lea    0x0(%rbp,%rdx,4),%rsi
  400719:	bf 38 08 40 00       	mov    $0x400838,%edi
  40071e:	b8 00 00 00 00       	mov    $0x0,%eax
  400723:	e8 68 fe ff ff       	callq  400590 <__isoc99_scanf@plt>
  400728:	83 c3 01             	add    $0x1,%ebx
  40072b:	8b 74 24 14          	mov    0x14(%rsp),%esi
  40072f:	39 de                	cmp    %ebx,%esi
  400731:	7f de                	jg     400711 <main+0x7b>
  400733:	48 8d 4c 24 10       	lea    0x10(%rsp),%rcx
  400738:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
  40073d:	48 89 ef             	mov    %rbp,%rdi
  400740:	e8 3f 00 00 00       	callq  400784 <get_min_max>
  400745:	8b 4c 24 10          	mov    0x10(%rsp),%ecx
  400749:	8b 54 24 0c          	mov    0xc(%rsp),%edx
  40074d:	be 50 08 40 00       	mov    $0x400850,%esi
  400752:	bf 01 00 00 00       	mov    $0x1,%edi
  400757:	b8 00 00 00 00       	mov    $0x0,%eax
  40075c:	e8 1f fe ff ff       	callq  400580 <__printf_chk@plt>
  400761:	b8 00 00 00 00       	mov    $0x0,%eax
  400766:	48 8b 4c 24 18       	mov    0x18(%rsp),%rcx
  40076b:	64 48 33 0c 25 28 00 	xor    %fs:0x28,%rcx
  400772:	00 00 
  400774:	74 05                	je     40077b <main+0xe5>
  400776:	e8 c5 fd ff ff       	callq  400540 <__stack_chk_fail@plt>
  40077b:	48 83 c4 28          	add    $0x28,%rsp
  40077f:	5b                   	pop    %rbx
  400780:	5d                   	pop    %rbp
  400781:	c3                   	retq   
  400782:	66 90                	xchg   %ax,%ax

0000000000400784 <get_min_max>:
  400784:	55                   	push   %rbp
  400785:	48 89 e5             	mov    %rsp,%rbp
  400788:	54                   	push   %rsp
  400789:	48 89 ec             	mov    %rbp,%rsp
  40078c:	5d                   	pop    %rbp
  40078d:	c3                   	retq   
  40078e:	66 90                	xchg   %ax,%ax

0000000000400790 <__libc_csu_init>:
  400790:	41 57                	push   %r15
  400792:	41 89 ff             	mov    %edi,%r15d
  400795:	41 56                	push   %r14
  400797:	49 89 f6             	mov    %rsi,%r14
  40079a:	41 55                	push   %r13
  40079c:	49 89 d5             	mov    %rdx,%r13
  40079f:	41 54                	push   %r12
  4007a1:	4c 8d 25 68 06 20 00 	lea    0x200668(%rip),%r12        # 600e10 <__init_array_start>
  4007a8:	55                   	push   %rbp
  4007a9:	48 8d 2d 68 06 20 00 	lea    0x200668(%rip),%rbp        # 600e18 <__init_array_end>
  4007b0:	53                   	push   %rbx
  4007b1:	4c 29 e5             	sub    %r12,%rbp
  4007b4:	31 db                	xor    %ebx,%ebx
  4007b6:	48 c1 fd 03          	sar    $0x3,%rbp
  4007ba:	48 83 ec 08          	sub    $0x8,%rsp
  4007be:	e8 4d fd ff ff       	callq  400510 <_init>
  4007c3:	48 85 ed             	test   %rbp,%rbp
  4007c6:	74 1e                	je     4007e6 <__libc_csu_init+0x56>
  4007c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4007cf:	00 
  4007d0:	4c 89 ea             	mov    %r13,%rdx
  4007d3:	4c 89 f6             	mov    %r14,%rsi
  4007d6:	44 89 ff             	mov    %r15d,%edi
  4007d9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4007dd:	48 83 c3 01          	add    $0x1,%rbx
  4007e1:	48 39 eb             	cmp    %rbp,%rbx
  4007e4:	75 ea                	jne    4007d0 <__libc_csu_init+0x40>
  4007e6:	48 83 c4 08          	add    $0x8,%rsp
  4007ea:	5b                   	pop    %rbx
  4007eb:	5d                   	pop    %rbp
  4007ec:	41 5c                	pop    %r12
  4007ee:	41 5d                	pop    %r13
  4007f0:	41 5e                	pop    %r14
  4007f2:	41 5f                	pop    %r15
  4007f4:	c3                   	retq   
  4007f5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4007fc:	00 00 00 00 

0000000000400800 <__libc_csu_fini>:
  400800:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400804 <_fini>:
  400804:	48 83 ec 08          	sub    $0x8,%rsp
  400808:	48 83 c4 08          	add    $0x8,%rsp
  40080c:	c3                   	retq   
